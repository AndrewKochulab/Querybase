{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/Querybase.ts","querybase-web.js","src/QuerybaseIndex.ts","src/QuerybaseQuery.ts","src/QuerybaseUtils.ts","src/web.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","QuerybaseUtils_1","QuerybaseQuery_1","QuerybaseIndex_1","Querybase","ref","indexOn","_this","this","_","QuerybaseUtils","key","indexes","indexify","arrayToObject","_warnAboutIndexOnRule","prototype","set","data","dataWithIndex","update","push","remove","onDisconnect","child","path","where","criteria","isString","QuerybaseQuery","orderByChild","keys","values","hasMultipleCriteria","criteriaIndex","join","criteriaValues","equalTo","_createIndexes","properties","indexHash","propCop","slice","mainProp","shift","forEach","prop","propString","valueString","createKey","subProp","obj","indexKeys","merge","_indexOnRule","getPathFromRef","map","console","warn","./QuerybaseIndex","./QuerybaseQuery","./QuerybaseUtils",2,3,"query","lessThan","value","endAt","greaterThan","startAt","startsWith","firstChar","substr","between","valueOne","valueTwo",4,"String","criteriaKeys","propOne","propTwo","PATH_POSITION","pathArray","toString","split","obj1","obj2","mergedHash","Object","arr","hash","item","sortLexicographically","b","localeCompare","stripKeys","keyStrip","copy","create","constructor","attr","hasOwnProperty",5,"Querybase_1","window","./Querybase"],"mappings":"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","file":"querybase-web.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/// <reference path=\"../typings/firebase/firebase.d.ts\" />\n\nimport {QuerybaseUtils} from \"./QuerybaseUtils\";\nimport {QuerybaseQuery} from \"./QuerybaseQuery\";\nimport {indexify} from \"./QuerybaseIndex\";\n\nexport class Querybase {\n  \n  ref: () => Firebase;\n  indexOn: () => string[];\n  key: () => string;\n  \n  private _: QuerybaseUtils;\n  \n  constructor(ref: Firebase, indexOn: string[]) {\n    this._ = new QuerybaseUtils();\n    this.ref = () => { return ref; }\n    this.indexOn = () => { return indexOn };\n    this.key = () => { return this.ref().key() };\n    \n    const indexes = indexify(indexOn, this._.arrayToObject(indexOn));\n    this._warnAboutIndexOnRule(indexes);\n  }\n  \n  set(data) {\n    const dataWithIndex = indexify(this.indexOn(), data);\n    this.ref().set(dataWithIndex);\n  }\n\n  update(data) {\n    const dataWithIndex = indexify(this.indexOn(), data);\n    this.ref().update(dataWithIndex);\n  }\n\n  push(data) {\n    if (!data) { return this.ref().push() }\n    \n    const dataWithIndex = indexify(this.indexOn(), data);\n    \n    this.ref().push(dataWithIndex);\n  }\n  \n  remove() {\n    return this.ref().remove();\n  }\n  \n  onDisconnect() {\n    return this.ref().onDisconnect();\n  }\n  \n  child(path, indexOn?: string[]) {\n    return new Querybase(this.ref().child(path), indexOn || this.indexOn());\n  }\n  \n  where(criteria): any {\n    \n    if (this._.isString(criteria)) {\n      return new QuerybaseQuery(this.ref().orderByChild(criteria));\n    } \n    \n    const keys = this._.keys(criteria);\n    const values = this._.values(criteria);\n    \n    // multiple criteria\n    if (this._.hasMultipleCriteria(keys)) {\n      \n      //TODO: refactor _ \n      const criteriaIndex = \"_\" + keys.join('_');\n      const criteriaValues = values.join('_');\n      \n      return this.ref().orderByChild(criteriaIndex).equalTo(criteriaValues); \n    }\n    \n    // single criteria \n    return this.ref().orderByChild(keys[0]).equalTo(values[0]);\n  }\n  \n  private _createIndexes(properties: any[], data: any, indexHash?: any) {\n    // create a copy of the array to not modifiy the original properties\n    const propCop = properties.slice();\n    // remove the first property, this ensures no redundant keys are created (age_name vs. name_age)\n    const mainProp = propCop.shift()\n    // recursive check for the indexHash\n    indexHash = indexHash || {};\n\n    propCop.forEach((prop) => {\n      var propString = \"\";\n      var valueString = \"\";\n      \n      // first level keys\n      indexHash[\"_\" + this._.createKey(mainProp, prop)] = this._.createKey(data[mainProp], data[prop]);\n\n      // create indexes for all property combinations\n      propCop.forEach((subProp) => {\n        propString = this._.createKey(propString, subProp);\n        valueString = this._.createKey(valueString, data[subProp]);\n      });\n      \n      indexHash[\"_\" + mainProp + propString] = data[mainProp] + valueString;\n      \n    });\n\n    if (propCop.length !== 0) {\n      indexify(propCop, data, indexHash);\n    }\n\n    return indexHash;\n  }\n\n  private _warnAboutIndexOnRule(obj) {\n    const indexKeys = this._.merge(obj, this._.arrayToObject(this.indexOn()));\n    const _indexOnRule =  `\n\"${this._.getPathFromRef(this.ref())}\": {\n  \"._indexOn\": [${this._.keys(indexKeys).map((key) => { return `\"${key}\"`; }).join(\", \")}]\n}`;\n    console.warn(`Add this rule to drastically improve performance of your Firebase queries: \\n ${_indexOnRule}`);\n  }\n\n}","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/// <reference path=\"../typings/firebase/firebase.d.ts\" />\nvar QuerybaseUtils_1 = require(\"./QuerybaseUtils\");\nvar QuerybaseQuery_1 = require(\"./QuerybaseQuery\");\nvar QuerybaseIndex_1 = require(\"./QuerybaseIndex\");\nvar Querybase = (function () {\n    function Querybase(ref, indexOn) {\n        var _this = this;\n        this._ = new QuerybaseUtils_1.QuerybaseUtils();\n        this.ref = function () { return ref; };\n        this.indexOn = function () { return indexOn; };\n        this.key = function () { return _this.ref().key(); };\n        var indexes = QuerybaseIndex_1.indexify(indexOn, this._.arrayToObject(indexOn));\n        this._warnAboutIndexOnRule(indexes);\n    }\n    Querybase.prototype.set = function (data) {\n        var dataWithIndex = QuerybaseIndex_1.indexify(this.indexOn(), data);\n        this.ref().set(dataWithIndex);\n    };\n    Querybase.prototype.update = function (data) {\n        var dataWithIndex = QuerybaseIndex_1.indexify(this.indexOn(), data);\n        this.ref().update(dataWithIndex);\n    };\n    Querybase.prototype.push = function (data) {\n        if (!data) {\n            return this.ref().push();\n        }\n        var dataWithIndex = QuerybaseIndex_1.indexify(this.indexOn(), data);\n        this.ref().push(dataWithIndex);\n    };\n    Querybase.prototype.remove = function () {\n        return this.ref().remove();\n    };\n    Querybase.prototype.onDisconnect = function () {\n        return this.ref().onDisconnect();\n    };\n    Querybase.prototype.child = function (path, indexOn) {\n        return new Querybase(this.ref().child(path), indexOn || this.indexOn());\n    };\n    Querybase.prototype.where = function (criteria) {\n        if (this._.isString(criteria)) {\n            return new QuerybaseQuery_1.QuerybaseQuery(this.ref().orderByChild(criteria));\n        }\n        var keys = this._.keys(criteria);\n        var values = this._.values(criteria);\n        // multiple criteria\n        if (this._.hasMultipleCriteria(keys)) {\n            //TODO: refactor _ \n            var criteriaIndex = \"_\" + keys.join('_');\n            var criteriaValues = values.join('_');\n            return this.ref().orderByChild(criteriaIndex).equalTo(criteriaValues);\n        }\n        // single criteria \n        return this.ref().orderByChild(keys[0]).equalTo(values[0]);\n    };\n    Querybase.prototype._createIndexes = function (properties, data, indexHash) {\n        var _this = this;\n        // create a copy of the array to not modifiy the original properties\n        var propCop = properties.slice();\n        // remove the first property, this ensures no redundant keys are created (age_name vs. name_age)\n        var mainProp = propCop.shift();\n        // recursive check for the indexHash\n        indexHash = indexHash || {};\n        propCop.forEach(function (prop) {\n            var propString = \"\";\n            var valueString = \"\";\n            // first level keys\n            indexHash[\"_\" + _this._.createKey(mainProp, prop)] = _this._.createKey(data[mainProp], data[prop]);\n            // create indexes for all property combinations\n            propCop.forEach(function (subProp) {\n                propString = _this._.createKey(propString, subProp);\n                valueString = _this._.createKey(valueString, data[subProp]);\n            });\n            indexHash[\"_\" + mainProp + propString] = data[mainProp] + valueString;\n        });\n        if (propCop.length !== 0) {\n            QuerybaseIndex_1.indexify(propCop, data, indexHash);\n        }\n        return indexHash;\n    };\n    Querybase.prototype._warnAboutIndexOnRule = function (obj) {\n        var indexKeys = this._.merge(obj, this._.arrayToObject(this.indexOn()));\n        var _indexOnRule = \"\\n\\\"\" + this._.getPathFromRef(this.ref()) + \"\\\": {\\n  \\\"._indexOn\\\": [\" + this._.keys(indexKeys).map(function (key) { return \"\\\"\" + key + \"\\\"\"; }).join(\", \") + \"]\\n}\";\n        console.warn(\"Add this rule to drastically improve performance of your Firebase queries: \\n \" + _indexOnRule);\n    };\n    return Querybase;\n})();\nexports.Querybase = Querybase;\n\n},{\"./QuerybaseIndex\":2,\"./QuerybaseQuery\":3,\"./QuerybaseUtils\":4}],2:[function(require,module,exports){\nvar QuerybaseUtils_1 = require(\"./QuerybaseUtils\");\nvar _ = new QuerybaseUtils_1.QuerybaseUtils();\nfunction indexify(indexes, data, indexHash) {\n    // create a copy of the array to not modifiy the original properties\n    var propCop = indexes.slice();\n    // remove the first property, this ensures no redundant keys are created (age_name vs. name_age)\n    var mainProp = propCop.shift();\n    // recursive check for the indexHash\n    indexHash = indexHash || {};\n    propCop.forEach(function (prop) {\n        var propString = \"\";\n        var valueString = \"\";\n        // first level keys\n        indexHash[\"_\" + _.createKey(mainProp, prop)] = _.createKey(data[mainProp], data[prop]);\n        // create indexes for all property combinations\n        propCop.forEach(function (subProp) {\n            propString = _.createKey(propString, subProp);\n            valueString = _.createKey(valueString, data[subProp]);\n        });\n        indexHash[\"_\" + mainProp + propString] = data[mainProp] + valueString;\n    });\n    if (propCop.length !== 0) {\n        indexify(propCop, data, indexHash);\n    }\n    return indexHash;\n}\nexports.indexify = indexify;\n\n},{\"./QuerybaseUtils\":4}],3:[function(require,module,exports){\n/// <reference path=\"../typings/firebase/firebase.d.ts\" />\nvar QuerybaseQuery = (function () {\n    function QuerybaseQuery(query) {\n        this.query = query;\n    }\n    QuerybaseQuery.prototype.lessThan = function (value) {\n        return new QuerybaseQuery(this.query.endAt(value));\n    };\n    QuerybaseQuery.prototype.greaterThan = function (value) {\n        return this.query.startAt(value);\n    };\n    QuerybaseQuery.prototype.equalTo = function (value) {\n        return this.query.equalTo(value);\n    };\n    QuerybaseQuery.prototype.startsWith = function (value) {\n        var firstChar = value.substr(0, 1);\n        return this.query.startAt(firstChar).endAt(value + \"\\uF8FF\");\n    };\n    QuerybaseQuery.prototype.between = function (valueOne, valueTwo) {\n        return this.query.startAt(valueOne).endAt(valueTwo);\n    };\n    return QuerybaseQuery;\n})();\nexports.QuerybaseQuery = QuerybaseQuery;\n\n},{}],4:[function(require,module,exports){\n/// <reference path=\"../typings/firebase/firebase.d.ts\" />\nvar QuerybaseUtils = (function () {\n    function QuerybaseUtils() {\n    }\n    QuerybaseUtils.prototype.isString = function (value) {\n        return typeof value === 'string' || value instanceof String;\n    };\n    QuerybaseUtils.prototype.hasMultipleCriteria = function (criteriaKeys) {\n        return criteriaKeys.length > 1;\n    };\n    QuerybaseUtils.prototype.createKey = function (propOne, propTwo) {\n        return propOne + \"_\" + propTwo;\n    };\n    QuerybaseUtils.prototype.getPathFromRef = function (ref) {\n        var PATH_POSITION = 3;\n        var pathArray = ref.toString().split('/');\n        return pathArray.slice(PATH_POSITION, pathArray.length).join('/');\n    };\n    QuerybaseUtils.prototype.merge = function (obj1, obj2) {\n        var mergedHash = {};\n        for (var prop in obj1) {\n            mergedHash[prop] = obj1[prop];\n        }\n        for (var prop in obj2) {\n            mergedHash[prop] = obj2[prop];\n        }\n        return mergedHash;\n    };\n    QuerybaseUtils.prototype.keys = function (obj) {\n        return Object.keys(obj);\n    };\n    QuerybaseUtils.prototype.values = function (obj) {\n        return Object.keys(obj).map(function (key) { return obj[key]; });\n    };\n    QuerybaseUtils.prototype.arrayToObject = function (arr) {\n        var hash = {};\n        arr.forEach(function (item) { return hash[item] = item; });\n        return hash;\n    };\n    QuerybaseUtils.prototype.sortLexicographically = function (prop) {\n        return function (a, b) { return a[prop].localeCompare(b[prop]); };\n    };\n    QuerybaseUtils.prototype.stripKeys = function (obj, keyStrip) {\n        if (keyStrip === void 0) { keyStrip = \"_\"; }\n        var copy = Object.create(obj);\n        this.keys(copy).forEach(function (key) { if (key.substr(0, 1) === keyStrip) {\n            delete copy[key];\n        } });\n    };\n    QuerybaseUtils.prototype.copy = function (obj) {\n        if (null == obj || \"object\" != typeof obj)\n            return obj;\n        var copy = obj.constructor();\n        for (var attr in obj) {\n            if (obj.hasOwnProperty(attr))\n                copy[attr] = obj[attr];\n        }\n        return copy;\n    };\n    return QuerybaseUtils;\n})();\nexports.QuerybaseUtils = QuerybaseUtils;\n\n},{}],5:[function(require,module,exports){\nvar Querybase_1 = require('./Querybase');\nvar QuerybaseUtils_1 = require('./QuerybaseUtils');\nvar QuerybaseQuery_1 = require('./QuerybaseQuery');\nvar QuerybaseIndex_1 = require('./QuerybaseIndex');\nwindow[\"Querybase\"] = Querybase_1.Querybase;\nwindow[\"QuerybaseUtils\"] = QuerybaseUtils_1.QuerybaseUtils;\nwindow[\"QuerybaseQuery\"] = QuerybaseQuery_1.QuerybaseQuery;\nwindow[\"Querybase\"][\"indexify\"] = QuerybaseIndex_1.indexify;\n\n},{\"./Querybase\":1,\"./QuerybaseIndex\":2,\"./QuerybaseQuery\":3,\"./QuerybaseUtils\":4}]},{},[5])\n\n","import {QuerybaseUtils} from \"./QuerybaseUtils\";\n\nconst _ = new QuerybaseUtils();\n\nexport function indexify(indexes: any[], data: Object, indexHash?: Object) {\n  // create a copy of the array to not modifiy the original properties\n  const propCop = indexes.slice();\n  // remove the first property, this ensures no redundant keys are created (age_name vs. name_age)\n  const mainProp = propCop.shift()\n  // recursive check for the indexHash\n  indexHash = indexHash || {};\n\n  propCop.forEach((prop) => {\n    var propString = \"\";\n    var valueString = \"\";\n      \n    // first level keys\n    indexHash[\"_\" + _.createKey(mainProp, prop)] = _.createKey(data[mainProp], data[prop]);\n\n    // create indexes for all property combinations\n    propCop.forEach((subProp) => {\n      propString = _.createKey(propString, subProp);\n      valueString = _.createKey(valueString, data[subProp]);\n    });\n      \n    indexHash[\"_\" + mainProp + propString] = data[mainProp] + valueString;\n      \n  });\n\n  if (propCop.length !== 0) {\n    indexify(propCop, data, indexHash);\n  }\n\n  return indexHash;  \n}","/// <reference path=\"../typings/firebase/firebase.d.ts\" />\n\nexport class QuerybaseQuery {\n  query: FirebaseQuery;\n  \n  constructor(query: FirebaseQuery) {\n    this.query = query;\n  }\n  \n  lessThan(value) {\n    return new QuerybaseQuery(this.query.endAt(value));\n  }\n  \n  greaterThan(value) {\n    return this.query.startAt(value);\n  }\n  \n  equalTo(value) {\n    return this.query.equalTo(value);\n  }\n  \n  startsWith(value) {\n    const firstChar = value.substr(0, 1);\n    return this.query.startAt(firstChar).endAt(`${value}\\uf8ff`);\n  }\n  \n  between(valueOne: number, valueTwo: number) {\n    return this.query.startAt(valueOne).endAt(valueTwo);\n  }\n  \n}","/// <reference path=\"../typings/firebase/firebase.d.ts\" />\n\nexport class QuerybaseUtils {\n  \n  isString(value): boolean {\n    return typeof value === 'string' || value instanceof String;\n  }\n  \n  hasMultipleCriteria(criteriaKeys) {\n    return criteriaKeys.length > 1;\n  }\n  \n  createKey(propOne, propTwo) {\n    return `${propOne}_${propTwo}`;\n  }\n  \n  getPathFromRef(ref): string {\n    const PATH_POSITION = 3;\n    var pathArray = ref.toString().split('/');\n    return pathArray.slice(PATH_POSITION, pathArray.length).join('/');\n  }  \n  \n  merge(obj1, obj2) {\n    var mergedHash = {};\n    for (var prop in obj1) { \n      mergedHash[prop] = obj1[prop]; \n    }\n    for (var prop in obj2) { \n      mergedHash[prop] = obj2[prop]; \n    }\n    return mergedHash;\n  }\n  \n  keys(obj) {\n    return Object.keys(obj);\n  }\n  \n  values(obj) {\n    return Object.keys(obj).map(key => { return obj[key]; });\n  }\n  \n  arrayToObject(arr: any[]) {\n    var hash = {};\n    arr.forEach((item) => hash[item] = item);\n    return hash;\n  }\n  \n  sortLexicographically(prop) {\n   return (a,b) => { return a[prop].localeCompare(b[prop]); };\n  }\n  \n  stripKeys(obj, keyStrip = \"_\") {\n    var copy = Object.create(obj);\n    this.keys(copy).forEach((key) => { if (key.substr(0, 1) === keyStrip) { delete copy[key] } });\n  }\n  \n  copy(obj: Object) {\n    if (null == obj || \"object\" != typeof obj) return obj;\n    var copy = obj.constructor();\n    for (var attr in obj) {\n      if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n    }\n    return copy;\n  }\n  \n}","import {Querybase} from './Querybase';\nimport {QuerybaseUtils} from './QuerybaseUtils';\nimport {QuerybaseQuery} from './QuerybaseQuery';\nimport {indexify} from './QuerybaseIndex';\n\nwindow[\"Querybase\"] = Querybase;\nwindow[\"QuerybaseUtils\"] = QuerybaseUtils;\nwindow[\"QuerybaseQuery\"] = QuerybaseQuery;\nwindow[\"Querybase\"][\"indexify\"] = indexify; "],"sourceRoot":"/source/"}